/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#define BT_CLR_CMD 0
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>
#define OUT_BLE 2

#define DEFAULT 0
#define LOWER   1
#define RAISE   2
#define NAVIG   3
#define FUNCT   4
#define ADJST   5

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// --------------------------------------------------------------------------------------
// |  TAB |  Q   |  W   |  E   |  R   |  T  |   |  Y  |  U   |  I   |  O   |  P  | BKSP |
// | CTRL |  A   |  S   |  D   |  F   |  G  |   |  H  |  J   |  K   |  L   |  ;  |   '  |
// | SHFT |CTL(Z)|ALT(X)|SFT(C)|CTL(V)|  B  |   |  N  |CTL(M)|SFT(,)|ALT(.)|  /  |RETURN|
//                         | LGUI | LWR |  SPACE  | RSE | FUNC |
                       bindings = <
   &kp ESC   &kp Q       &kp W      &kp E       &kp R       &kp T   &kp Y &kp U        &kp I           &kp O        &kp P    &kp BSPC
   &kp TAB   &kp A       &kp S      &kp D       &kp F       &kp G   &kp H &kp J        &kp K           &kp L        &kp SEMI &kp RET
   &kp LSHFT &hm LCTRL Z &hm LALT X &hm LSHFT C &hm LCTRL V &kp B   &kp N &hm RCTRL M  &hm RSHFT COMMA &hm RALT DOT &kp FSLH &kp SQT
                        &kp LGUI  &kp LOWER &kp SPACE &kp RAISE  &kp FUNCT
                        >;
                };

                lower_layer {
// -----------------------------------------------------------------------------
// | DEL |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | DEL |
// |     |     |     |     |     |     |   |  ~  |  _  |  +  |  {  |  }  | "|" |
// |     |     | GUI |     |     | CAPS|   | PRSC|     |     |     |     |     |
//                       |     |     | RET | ADJ |     |
                        bindings = <
   &trans    &kp AT    &kp CARET &trans   &trans   &kp PG_UP      &kp N7    &kp N8  &kp N9 &kp KP_PLUS  &kp PRCNT  &kp BSPC
   &kp CAPS  &kp LPAR  &kp RPAR   &kp SQT  &trans   &kp PG_DN      &kp N4    &kp N5  &kp N6 &kp MINUS    &trans  &trans
   &kp LALT  &trans    &trans     &trans   &trans   &trans         &kp N1    &kp N2  &kp N3 &kp EQUAL    &trans  &trans
                                   &trans    &trans    &kp N0    &trans   &trans        
                              
                              >;
                };

                raise_layer {
// -----------------------------------------------------------------------------
// | DEL |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | DEL |
// |     |     |     |     |     |     |   |  `  |  -  |  =  |  [  |  ]  |  \  |
// |     |     | GUI |     |     | CAPS|   | PRSC|     |     |     |     |     |
//                       |     | ADJ | BKSP |    |     |
                        bindings = <
   &kp DEL &kp EXCL &kp AT   &kp HASH &kp DLLR &kp PRCNT      &kp CARET &kp AMPS  &kp ASTRK   &kp LPAR  &kp RPAR  &kp DEL
   &trans  &trans   &trans   &kp UP  &trans   &trans         &kp GRAVE &kp MINUS &kp EQUAL &kp LBKT  &kp RBKT  &kp BSLH
   &trans  &trans   &kp LEFT &kp DOWN   &kp RIGHT   &trans       &kp PSCRN &trans    &trans    &trans    &trans    &trans
                                   &trans  &mo ADJST &kp BSPC &trans  &trans
                        >;
                };

                navig_layer {
// -----------------------------------------------------------------------------
// | DEL |     |     |     |     |     |   |     |     |     |     |     | DEL |
// |     |     |     |     |     |     |   |     |LEFT |DOWN | UP  |RIGHT|     |
// |     |     |     |     |     |CAPS |   |     |HOME |PG-DN|PG-UP| END |     |
//                        |     |     |     |     |     |
                        bindings = <
   &kp DEL &trans  &trans   &trans   &trans   &trans      &trans  &trans   &trans    &trans    &trans    &kp DEL
   &out OUT_BLE  &bt BT_CLR   &trans   &trans   &trans   &trans      &trans  &kp LEFT &kp DOWN  &kp UP    &kp RIGHT &trans
   &trans  &trans  &trans   &trans   &trans   &kp CLCK    &trans  &kp HOME &kp PG_DN &kp PG_UP &kp END   &trans
                                   &trans   &trans   &trans   &trans   &trans
                        >;
                };

                funct_layer {
// -----------------------------------------------------------------------------
// | DEL |     |     |     |     |     |   |     |     |     |     |     | DEL |
// |     |     |     |     |     |     |   | F1  | F2  | F3  | F4  | F5  | F6  |
// |     |     |     |     |     |  '  |   | F7  | F8  | F9  | F10 | F11 | F12 |
//                        |     |     |     |     |     |
                        bindings = <
   &kp DEL &trans  &trans   &trans   &trans   &trans      &trans    &trans    &trans    &trans    &trans    &kp DEL
   &trans  &trans  &trans   &trans   &trans   &trans      &kp F1    &kp F2    &kp F3    &kp F4    &kp F5    &kp F6
   &trans  &trans  &trans   &trans   &trans   &kp SQT     &kp F7    &kp F8    &kp F9    &kp F10   &kp F11   &kp F12
                                  &trans   &trans   &trans   &trans   &trans
                        >;
                };

                adjust_layer {
// ------------------------------------------------------------------------------
// |     |     |     |     |     |     |   | BT1 | BT2 | BT3 | BT4 | BT5 |BT CLR|
// |     |     |     |     |     |     |   |     |     |     |     |     |      |
// |     |     |     |     |     |     |   |RESET|     |     |     |     |      |
//                        |     |     |     |     |     |
                        bindings = <
   &none   &none   &none   &none   &none   &none      &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &bt BT_CLR
   &none   &none   &none   &none   &none   &none      &none        &none        &none        &none        &none        &none
   &none   &none   &none   &none   &none   &none      &reset       &none        &none        &none        &none        &none
                       &trans      &trans       &trans        &trans      &trans
                        >;
                };
        };
};
